package Itachi_W

import Itachi_Q
import ClosureForGroups
import ClosureTimers
import RegisterEvents
import Fast


let debuff = 'A018'
let katonId = 'A010'
let genjutsuId = 'h005'
let sharinganId = 'c015'
let id = 'A013'
let darkId = 'c008'
let roomId = 'c013'
let radius = 700.
let manaCost = 1.


function spellCast(unit caster, vec2 castPos)

    let time = caster.getInt(true) / 4.
    let casterOwner = caster.getOwner()
    let itachiCastKaton = CreateGroup()
    let room = createUnit(casterOwner, roomId, castPos, 0)
    let roomPos = room.getPos()
    let dark = createUnit(casterOwner, darkId, castPos, 0)
    let sharingan = createUnit(casterOwner, sharinganId, castPos, 0)
    dark.setScale(2.)
    sharingan.setScale(10.)
    room.setTimeScale(0.5)
    dark.setTimeScale(0)


    doPeriodicallyTimed(0.5, time) cb ->
        let genjGroup = CreateGroup()
        genjGroup.enumUnitsInRange(roomPos, radius)
        genjGroup.forEachIn() victim ->
            if IsUnitAlly(victim, casterOwner) or not victim.isAlive()
                genjGroup.removeUnit(victim)
        let victim = genjGroup.getRandomUnit()
        if victim != null 
            victim.addAbility(debuff)
            SetPlayerAbilityAvailable(victim.getOwner(), debuff, false)
            if distanceBetween(victim, room) >= radius + time
                victim.removeAbility(debuff)
            let genjRand = GetRandomReal(50, 150)
            let genjutsu = createUnit(casterOwner, genjutsuId, getPosForward(victim, genjRand), angle(0))
            flashEffect("Crow Jutsu Feather SFX.mdx", genjutsu.getPos())
            genjutsu.setFacing(angleBetween(genjutsu, victim).asAngleDegrees())
            itachiCastKaton.addUnit(genjutsu)
            genjutsu.issueImmediateOrder("attack")
        genjGroup.clear()
        genjGroup.destr()    
    doPeriodicallyTimed(2, time) cb ->
        let random = itachiCastKaton.getRandomUnit()
        let nearEnemy = getNearestEnemy(random.getPos(), casterOwner, 1400)
        if random != null and nearEnemy != null
            itachi_Q_spellCast(random, nearEnemy.getPos(), caster.getInt(true).toReal())
    doPeriodicallyTimed(1, time) cb -> 
        itachiCastKaton.forEachIn() genjutsu ->
            if not genjutsu.isAlive()
                itachiCastKaton.removeUnit(genjutsu)
            else if distanceBetween(room, genjutsu) >= radius + time
                genjutsu.kill()
        if cb.isLast()
                itachiCastKaton.forEachFrom() genjutsu ->
                    genjutsu.kill()
                itachiCastKaton.clear()
                itachiCastKaton.destr()
                room.kill()  
                dark.kill()
                sharingan.kill()       

init 
    registerSpellEffectEvent(id) ->
        spellCast(GetTriggerUnit(), getSpellTargetPos())
    registerPlayerUnitEvent(EVENT_PLAYER_UNIT_DEATH) ->
        let deadUnit = GetTriggerUnit()
        if deadUnit.getTypeId() == genjutsuId 
            let killer = GetKillingUnit()
            if killer != null
                deadUnit.damageTarget(killer, 20.)