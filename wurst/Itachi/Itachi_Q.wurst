package Itachi_Q


import ClosureForGroups
import ClosureTimers
import RegisterEvents
import Fast

let heroId = 'H003'
let soundKat = gg_snd_katonGouko
let dmgP = 0.25
let radiusP = 5.
let id = 'A010'
let katonId = 'c010'
let effectId = 'c011'
let speed = 40.
let dummyId = 'xdum'
let katonPlusScale = 0.15
let distance = 1400.
let dmgFinal = 100.

public function itachi_Q_spellCast(unit caster, vec2 castPos, real dmgInt)

    let dmgFinal = caster.getTypeId() == heroId ? 100. + dmgInt : dmgInt / 2.
    real dmg = 1.
    real radius = 200.
    let casterOwner = caster.getOwner()
    let katonAngle = angleBetween(caster, castPos)
    let katonSpawnPos = getPosForward(caster, 30)
    let katon = createUnit(casterOwner,katonId, katonSpawnPos, katonAngle)
    real katonScale = 2.

    soundKat.play()

    doPeriodicallyTimed(0.025, distance / speed * 0.025) cb ->
        moveForward(katon, speed)
        let katonPos = katon.getPos()
        radius = radius + radiusP
        dmg = dmg + dmgP
        let fire = createUnit(casterOwner, effectId, katonPos, 0)
        katonScale = katonScale + katonPlusScale
        katon.setScale(katonScale)
        doAfter(0.5) ->
            fire.remove()
        forUnitsInRange(katonPos, radius) victim ->
            if IsUnitEnemy(victim, casterOwner) and victim.isAlive()
                caster.damageTarget(victim, dmg)
        if cb.isLast()
            let expModel = createUnit(casterOwner, dummyId, katonPos, 0)
            expModel.setScale(4)
            expModel.addEffect("AerialExplosionV3.mdx", "chest")
            forUnitsInRange(katonPos, radius) victim ->
                if IsUnitEnemy(victim, casterOwner) and victim.isAlive()
                    caster.damageTarget(victim, dmgFinal)
            katon.remove()
            expModel.remove()
init 
    registerSpellEffectEvent(id) ->
        itachi_Q_spellCast(GetTriggerUnit(), getSpellTargetPos(), GetTriggerUnit().getInt(true).toReal())